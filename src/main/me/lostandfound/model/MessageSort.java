package me.lostandfound.model;
// Generated 2014-10-29 23:03:33 by Hibernate Tools 3.2.4.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * MessageSort generated by hbm2java
 */
@Entity
@Table(name = "message_sort", schema = "public")
public class MessageSort implements java.io.Serializable {

	private Integer id;
	private String messort;
	private Set<Messagess> messagesses = new HashSet<Messagess>(0);

	public MessageSort() {
	}

	public MessageSort(Integer id, String messort) {
		this.id = id;
		this.messort = messort;
	}
	public MessageSort(Integer id, String messort, Set<Messagess> messagesses) {
		this.id = id;
		this.messort = messort;
		this.messagesses = messagesses;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@SequenceGenerator(name="message_sort_seq",sequenceName="message_sort_id_seq",allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="message_sort_seq")
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "messort", nullable = false, length = 30)
	@NotNull
	@Length(max = 30)
	public String getMessort() {
		return this.messort;
	}

	public void setMessort(String messort) {
		this.messort = messort;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "messageSort")
	public Set<Messagess> getMessagesses() {
		return this.messagesses;
	}

	public void setMessagesses(Set<Messagess> messagesses) {
		this.messagesses = messagesses;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		
		MessageSort other = (MessageSort) obj;
		if (id == null) {
			if (other.getId() != null)
				return false;
		} else if (!id.equals(other. getId()))
			return false;
		return true;
	}

}
